ballot stuff:
provide high level summeries of the state of the argument that can provide abstraction and focus the issue

TODO: (the rantings ov a mad man)

readme
authenticate everything
unit tests
enumeration?
add feedback widgit
add link to github
seed issuetracker with freature requests
 - tags, searching, nice ajax and css, ...
 
jenkins test

what are best practices for commenting? something like javadocs would be nice

review more complicated systems for dealing with.  (lots f thought need to be given becuase these trees could get complicated)
 - nonsequeters
 - external forms of evidence
  - give stronger weight to testable emperical claims?
 - referencing other arguments
  - perhaps in a functional style 
    e.g. 1. "exceptional claims require exceptional evidence"
         used as "Exceptional claims require exceptional evidence.  This is an exceptional claim.  It only has modest evidence"
    2. "nouns of a statment must exist to perform actions"
     "Santa will kill you"
     "nouns of a statment must exist to perform actions. Santa does not exist."
 - mathmatical facts
 - right now there is effectively no reason to give suppoting evidence in depth more then 1.  more powerful supporting evidence types could solve this problem.
 -grey out conversational falavor text? "I agree..."
Aguments to seed:
santa will kill you
you should not wear shoes on consecutive days
patent law should be abolished http://research.stlouisfed.org/wp/2012/2012-035.pdf
something about bitcoin? 
the 2014 Boston/Cambrige/Sommervile ballot choices
 - to up the ante, agree to vote wherever the concensus lands (hacker news: "to get my vote, just convince me")

 -test features by seleting them as on or off by defult and seeing what users change the value to
 
random scratch
from django.contrib import admin
from debate.models import Statement
from debate.models import Argument
from debate.models import ArgumentFor
from debate.models import ArgumentPart

a = Argument.objects.get(id=1)